AWSTemplateFormatVersion: '2010-09-09'
Description: The infrastructure for voice-controlled photo album.
Parameters:
  S3BucketNameB2:
    Description: The name of the S3 bucket to be created.
    Type: String
    Default: index-photos-0x0
  S3BucketNameB1:
    Description: The name of the S3 bucket for storing the front end.
    Type: String
    Default: search.photo
  GitHubOwner:
    Type: String
    Default: wowufoundme
    AllowedPattern: '[A-Za-z0-9-]+'
  GitHubRepo:
    Type: String
    Default: A2-Frontend
    AllowedPattern: '[A-Za-z0-9-]+'
  GitHubBranch:
    Type: String
    Default: main
    AllowedPattern: '[A-Za-z0-9-]+'
  GitHubOAuthToken:
    Type: String
    Default: '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'
    NoEcho: true
    MinLength: 40
    MaxLength: 40
    AllowedPattern: '[a-z0-9]*'
Resources:
  CodePipelineProjectRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
                - cloudformation.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: 'Role for codepipeline and cloudformation.'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      RoleName: 'CodeBuildAndCloudformationProjectRole'

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        ArtifactIdentifier: lambda-pipeline-artifacts
        Type: CODEPIPELINE
      Description: 'code build project for lambda pipeline'
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
      Name: lambda-code-build
      ServiceRole: !Ref CodePipelineProjectRole
      Source:
        Type: CODEPIPELINE

  LambdaPipelineAccess:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: 'Role for codepipeline'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      RoleName: 'LambdaPipelineRole'

  LambdaPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: codepipeline-artifacts
        Type: S3
      Name: lamdba-pipeline
      RestartExecutionOnUpdate: false
      RoleArn: !GetAtt LambdaPipelineAccess.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                {
                  'Owner': !Ref GitHubOwner,
                  'Repo': !Ref GitHubRepo,
                  'Branch': !Ref GitHubBranch,
                  'OAuthToken': !Ref GitHubOAuthToken,
                }
              OutputArtifacts:
                - Name: 'voice-controlled-app'
              Region: us-east-1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration: { 'ProjectName': { 'Ref': 'CodeBuildProject' } }
              InputArtifacts:
                - Name: 'voice-controlled-app'
              OutputArtifacts:
                - Name: 'voice-controlled-app-output'
              Region: us-east-1
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                {
                  'ActionMode': 'CREATE_UPDATE',
                  'StackName': 'voicePhotoAlbumStack',
                  'Capabilities': 'CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND',
                  'RoleArn':
                    { 'Fn::GetAtt': ['CodePipelineProjectRole', 'Arn'] },
                  'TemplatePath': 'BuildArtifact::outputSamtemplate.yaml',
                }
              InputArtifacts:
                - Name: 'voice-controlled-app'
              Region: us-east-1
